services:
  postgres-airflow:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-airflow-db:/var/lib/postgres-airflow/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d airflow -U airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s
    restart: always

  postgres-dbt:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres-dbt
      POSTGRES_SCHEMA: public
    volumes:
      - postgres-dbt-db:/var/lib/postgres-dbt/data
    ports:
      - "5433:5432"
    healthcheck:
      # Adding the database and user to resolve 'FATAL' errors (role not found, database not found)
      test: ["CMD-SHELL", "pg_isready -d postgres-dbt -U postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s
    restart: always

  airflow-init:
    build: .
    image: apache/airflow:2.9.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session"
      _AIRFLOW_DB_UPGRADE: "true"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
    entrypoint: /bin/bash
    # command: -c "airflow db upgrade && airflow users create -r Admin -u airflow -p airflow -e airflow@example.com -f Airflow -l Admin && airflow db init"
    command: -c "airflow db upgrade && airflow db init"
    depends_on:
      postgres-airflow:
        condition: service_healthy
    restart: no

  webserver:
    build: .
    image: apache/airflow:2.9.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__WEBSERVER__AUTHENTICATE: "false"
      AIRFLOW__WEBSERVER__RBAC: "false"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
      AIRFLOW__WEBSERVER__DISABLE_OAUTH: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres-airflow:
        condition: service_healthy
    restart: always
    command: >
      airflow webserver

  scheduler:
    build: .
    image: apache/airflow:2.9.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres-airflow:
        condition: service_healthy
    restart: always
    command: >
      airflow scheduler

volumes:
  postgres-airflow-db:
  postgres-dbt-db:
